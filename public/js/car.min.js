const tabs=document.querySelectorAll(".tabs"),blocks=document.querySelectorAll("[block]"),price=+document.querySelector("#price").textContent,days=document.querySelector("#days"),total=document.querySelector("#total"),smtotal=document.querySelector("#sm-total"),smdays=document.querySelector("#sm-days"),booking=document.querySelector("#book"),reservation=document.querySelector("#reservation"),smreserve=document.querySelector("#sm-reserve");function activeTab(e){tabs.forEach(t=>{t.classList[e===t?"add":"remove"]("active")})}function betweenDates(e,t){let r=new Date(e),o=new Date(t);return(o-r)/864e5}function ucWords(e){let t=e.replace(/-/g," ").replace("pick up","Pick-up").replace("drop off","Drop-off"),r=t.split(" "),o=r.map(e=>e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()).join(" ");return o}function calcPrice(){let e=booking.elements;if(!e.from_date.value.trim()||!e.to_date.value.trim())return;let t=Math.round(betweenDates(e.from_date.value+" "+e.from_time.value,e.to_date.value+" "+e.to_time.value));days.innerHTML=t,total.innerHTML=t*price,smtotal.innerHTML=t*price,smdays.innerHTML=Neo.Helper.trans("Per")+" "+t+" "+Neo.Helper.trans("Days")}function intersect(){let e=window.scrollY||document.documentElement.scrollTop,t=null,r=1/0;blocks.forEach(o=>{let l=o.getBoundingClientRect(),a=l.top+window.pageYOffset-40,s=Math.abs(e-a);s<r&&(r=s,t=o)}),t&&activeTab(document.querySelector(`[href="#${t.id}"]`))}function reserve(e){e.preventDefault();let t=[],r=booking.elements;for(let o=0;o<r.length;o++){let l=r[o];"value"in l&&(l.value.trim()?l.classList.remove("outline","outline-2","outline-red-400","outline-offset-[-2px]"):(l.classList.add("outline","outline-2","outline-red-400","outline-offset-[-2px]"),Neo.Toaster.toast(Neo.Helper.trans(ucWords(l.name)+" Is Required"),"error")),t.push(!l.value.trim()))}r.from_date.value.trim()&&(0>betweenDates(Neo.Helper.Str.moment(new Date().toDateString()),r.from_date.value)?(r.from_date.classList.add("outline","outline-2","outline-red-400","outline-offset-[-2px]"),Neo.Toaster.toast(Neo.Helper.trans("Pick-up Date Must Be Today Or After"),"error")):r.from_date.classList.remove("outline","outline-2","outline-red-400","outline-offset-[-2px]"),t.push(!r.from_date.value.trim())),r.from_date.value.trim()&&r.to_date.value.trim()&&(1>betweenDates(r.from_date.value,r.to_date.value)?(r.to_date.classList.add("outline","outline-2","outline-red-400","outline-offset-[-2px]"),Neo.Toaster.toast(Neo.Helper.trans("Drop-off Date Must Be After Pick-up Date"),"error")):r.to_date.classList.remove("outline","outline-2","outline-red-400","outline-offset-[-2px]"),t.push(!r.to_date.value.trim())),t.includes(!0)||booking.submit()}document.querySelector("#ui-carousel")&&Slider({root:document.querySelector("#ui-carousel"),prev:document.querySelector("#ui-prev"),next:document.querySelector("#ui-next"),opts:{drag:!0,gaps:0}}),tabs.forEach(e=>{e.addEventListener("click",t=>{t.preventDefault(),activeTab(e);let r=e.getAttribute("href").substring(1),o=document.getElementById(r),l=o.offsetTop-60;window.scrollTo({top:l,behavior:"smooth"})})}),new IntersectionObserver(e=>{e.forEach(e=>{smreserve.classList[e.isIntersecting?"add":"remove"]("translate-y-full")})}).observe(reservation),booking.addEventListener("change",calcPrice),booking.addEventListener("input",calcPrice),window.addEventListener("scroll",intersect),booking.addEventListener("submit",reserve),calcPrice();